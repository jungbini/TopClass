  KAFKA-2663 KAFKA-2664; Add quota-delay time to request processing time break-up; avoid using copy-on-write map for metrics  This has 2 fixes: KAFKA-2664 - This patch changes the underlying map implementation of Metrics.java to a ConcurrentHashMap. Using a CopyOnWriteMap caused new metrics creation to get extremely slow when the existing corpus of metrics is large. Using a ConcurrentHashMap seems to speed up metric creation time significantly  KAFKA-2663 - Splitting out the throttleTime from the remote time. On throttled requests, the remote time went up artificially.  Some status on using a ConcurrentMap. Time to create : - 100k sensors (1.5 seconds) - 200k sensors (3 seconds) - 400k sensors (9 seconds) - 500k sensors (14 seconds)  Please refer this test (originally written by Joel) http://pastebin.com/LnKjbY9a  Author: Aditya Auradkar <aauradkar@linkedin.com>  Reviewers: Joel Koshy <jjkoshy.w@gmail.com>  Closes #369 from auradkar/K-2664  