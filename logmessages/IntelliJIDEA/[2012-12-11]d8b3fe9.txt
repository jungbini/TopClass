at may happen, because the listener in the ChangeListManagerImpl that shows the notification may receive defaultListChanged() event before the GitCherryPicker manages to remove the changelist silently. It also may happen in the case described in the bugreport when user had an empty default changelist: it becomes not default when we cherry-pick.  SOLUTION: Postpone notifications during the process of cherry-pick, and display needed notifications afterwards.  DETAILS: * Introduce ChangeListManagerEx#block/unblockModalNotifications. * If notifications are blocked, and the event defaultChangeListChanges() comes, remember the list to propose to delete in a set (avoiding duplicates). * After notifications are unblocked display the confirmation if needed. Although GitCherryPicker removes lists on its own and the situation with more than 1 changelist awaiting deletion is unlikely, support this case and display the confirmation for all lists at once. * Both methods are called from AWT and operate on AWT, so no sync issues there.  