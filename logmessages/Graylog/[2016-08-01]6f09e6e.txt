  Fix issues with app prefix (#2564)  * Set __webpack_public_path__ early Move logic setting `__webpack_public_path__` to its own file, that needs to be loaded before anything else, avoiding issues with assets.  Also use uri-js to concatenate the app prefix, avoiding generating URIs with double slashes at the end. * Fix loading of /system pages when no prefix is set * Include plugin routes in Routes module In that way, routes can be prefixed automatically in the same way other Routes. This requires making plugin routes global.  Global registry of plugin routes. Route names are generated automatically from the route path, by removing any colons, replacing slashes with underscores, and making the string uppercase.  Plugin register example: routes: [ { path: '/system/pipelines', component: Foo }, { path: '/system/pipelines/:pipelineId', component: Bar }, ]  Using routes on plugin components: <LinkContainer to={Routes.pluginRoutes('SYSTEM_PIPELINES')}> ... </LinkContainer> <LinkContainer to={Routes.pluginRoutes('SYSTEM_PIPELINES_PIPELINEID')(123)}> ... </LinkContainer> * Prefix plugin routes separately In order to reuse the logic prefixing routes, we need to prefix plugin routes separately, adding them to the Routes object before exporting it.  Fixes #2568  