  Fix type argument substitution bug in KFunction construction  For example,  KMemberFunction2<T, P1, P2, R> : KMemberFunction<T, R>  So for this inheritance the heuristic that was present ("take the last K type parameters of the subclass, and substitute for K parameters of the superclass") was wrong. The new heuristic for this case is: take type parameters with the same names.  Also don't store "parameters" in a lazy value, since it's easy to compute and it's computed practically every time anyway  