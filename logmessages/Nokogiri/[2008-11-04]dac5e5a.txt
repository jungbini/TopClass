  fixing GC issue related to using _private C struct member in libxml nodes.  instead of _private, we're now using a class-level hash to track (node => object) relationships.  however, we have to be careful not to store the actual object, because then GC will consider the object to still be in use and never GC it.  further, we can't use the WeakRef class, because lots of tests fail due to type-iness (I should probably look closer at why, exactly -- isn't WeakRef supposed to Just Work?).  so the end result is we store the object id in the hash, and use ObjectSpace._id2ref() to retrieve the object reference when we need it.  