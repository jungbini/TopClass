  Grab-bag of minor changes to HTTP/2  Motivation:  Various small fixes/improvements to the interface to the HTTP/2 classes, as well as some minor performance improvements.  Modifications:  - Added fix for IntObjectHashMap to ensure that capacity is always odd. Even capacity can cause probing to fail. - Cleaned the access to GOAWAY information in Http2Connection interface. Endpoints now manage their own state for GOAWAY. Also added a goingAway event handler. - Added Endpoint methods for checking MAX_CONCURRENT_STREAMS or if the number of streams for the endpoint have been exhausted. See Endpoint.nextStreamId()/acceptingNewStreams(). - Changed DefaultHttp2Connection to use IntObjectHashMap. This should be a slight memory improvement. - Fixed check for MAX_CONCURRENT_STREAMS to correctly use the number of active streams for the endpoint (not total active). See DefaultHttp2Connection.checkNewStreamAllowed. - Exposing a few methods to subclasses of AbstractHttp2ConnectionHandler (e.g. exception handling). - Cleaning up GOAWAY and RST_STREAM handling in AbstractHttp2ConnectionHandler.  Result:  HTTP/2 code should provide more information to subclasses and will have a reduced memory footprint.  