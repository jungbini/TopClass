Class) to try to handle either case gracefully when retrieving a value of type Number or a subtype of Number.  Line from my config that triggered the bug:  metrics.slf4j.interval=5000  Precondition failure that appeared during execution of `g = TitanFactory.open('path/to/config.properties')` in gremlin shell:  Invalid class for configuration value [titan.metrics.console.interval]. Expected [class java.lang.Long] but given [class java.lang.String] Display stack trace? [yN] y java.lang.IllegalArgumentException: Invalid class for configuration value [titan.metrics.console.interval]. Expected [class java.lang.Long] but given [class java.lang.String] at com.google.common.base.Preconditions.checkArgument(Preconditions.java:119) at com.thinkaurelius.titan.diskstorage.configuration.ConfigOption.verify(ConfigOption.java:99) at com.thinkaurelius.titan.diskstorage.configuration.ConfigOption.get(ConfigOption.java:93) at com.thinkaurelius.titan.diskstorage.configuration.MixedConfiguration.get(MixedConfiguration.java:44) at com.thinkaurelius.titan.graphdb.configuration.GraphDatabaseConfiguration.configureMetricsConsoleReporter(GraphDatabaseConfiguration.java:1170) at com.thinkaurelius.titan.graphdb.configuration.GraphDatabaseConfiguration.configureMetrics(GraphDatabaseConfiguration.java:1160) at com.thinkaurelius.titan.graphdb.configuration.GraphDatabaseConfiguration.preLoadConfiguration(GraphDatabaseConfiguration.java:1146) at com.thinkaurelius.titan.graphdb.configuration.GraphDatabaseConfiguration.<init>(GraphDatabaseConfiguration.java:1102) at com.thinkaurelius.titan.core.TitanFactory.open(TitanFactory.java:70) at com.thinkaurelius.titan.core.TitanFactory.open(TitanFactory.java:47)  I attached a debugger to check that the object on the affected line was actually of type String before making these changes.  