  Enable ecj compiler error when a subclass member shadows a parent class member  Summary: I just spent an hour debugging an issue that boiled down to:  class Parent { public int foo; }  class Child extends Parent { public int foo; }  In this case, there are two separate `foo` members, and which one you get depends on whether you address the object as `Child` or as `Parent`.  This was ultra confusing and almost certainly causing bugs today.  Thankfully, ecj has a compiler warning we can enable to ensure we don't do this (`org.eclipse.jdt.core.compiler.problem.fieldHiding`). Sadly, it's off by default.  This enables the ecj compiler warning and fixes the few cases in the buck repo where we actually had child classes shadowing members of their parents or enclosing scopes.  Test Plan: `ant clean default compile-tests test`  