  Correctly invalidate flavors from Parser cache on file change event  Summary: A user reported the following scenario:  1) Repo has two targets `//foo:lib` and `//bar:lib`, where the latter depends on the former. 2) User runs `buck build //bar:lib#flavor` 3) File `foo/BUCK` is deleted 4) File `bar/BUCK` contains rule depending on `//foo:lib`, is changed to remove dependency 5) User runs `buck build //bar:lib#flavor` again 6) buckd raises an exception saying it can't find `//foo:lib`  I tracked this down to the logic in `Parser.invalidateDependents` incorrectly relying on the cached map of (path -> JSON blob) pairs to clean out the cached targets defined in `path` (by parsing the JSON blobs and extracting the raw target names).  Unfortunately, only clearing out the raw target names from cache left any flavors in cache, so they contained stale dependencies.  This 