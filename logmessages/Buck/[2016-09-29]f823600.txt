  Fix MemoryHandler for LogView Error logger  Summary: Several issues are fixed: * Logger can be invoked concurrently and access needs to be synchronized. * The very record that triggered the report was not included in the detailed logs. I.e. we would see a title like "Error %d executing %s: com.facebook.buck.io.Watchman", but we would not get that line with the palceholders properly substituted. * Log records are kept in a circular buffer, but were not reported in order, but rather from the beginning of the physical buffer (not its logical start) which caused logs in LogView to be scrambled.  Implementation notes: * Access to the `buffer`, `start` and `count` is made at one place only, and is synchronized. * We don't want the actual scribe call to be made within the synchronized block. That's why we create a temp array of the records to be reported first. * We don't need to search for the record that triggered the report. It's always the last one in the array (doh!). * Technically, the content of the whole `publish` method could be stripped, as it is useless without the `logRecords` that gets stripped. I left it as is for a no particular reason. Heck, this whole class is compelte useless for open source and could be stripped.  Test Plan: Do `Logger.error` somewhere in the code, verify that MemoryHandler intercepts it, correctly creates the report, and clears the buffer.  {F63753971}  Reviewed By: marcinkosiba  fbshipit-source-id: c7504c6  