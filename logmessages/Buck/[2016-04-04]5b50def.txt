  Include symlink tree/header map rules as runtime dependencies of compilation database  Summary:Currently, compilation database rules have no runtime dependencies.  When Buck decides it doesn't need to build a compilation database rule (because it's in cache), it skips fetching and laying out the dependencies of that rule (since they're not marked as runtime).  However, compilation database rules contain references to paths under symlink trees or header maps. If we don't re-run the symlink tree/header map dependency each time we "fetch" the compilation database from cache (which is a no-op, since the rule does all its work in post build steps), it can refer to headers which don't exist in the map.  This fixes the issue by adding the private and exported headers (if present) as runtime dependencies of the compilation database rule. Now, even if Buck decides it doesn't need to rebuild the rule, it will fetch and lay out the header map dependencies first.  Test Plan:Added new integration test. Before patch, confirmed test failed by running:  ant java-test -Dtest.class=CxxCompilationDatabaseIntegrationTest  Applied fix, confirmed integration test passed.  Updated unit tests, confirmed they passed with:  ant java-test -Dtest.class=CxxCompilationDatabaseTest  Reviewed By: yiding  fb-gh-sync-id: 3c0098a fbshipit-source-id: 3c0098a  