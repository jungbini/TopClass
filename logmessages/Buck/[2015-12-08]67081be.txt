  New class NumberFormatter to provide thread-safe/i18n-safe number formatting and parsing  Summary: Buck currently formats and parses numbers in various ways, most of which are neither thread-safe nor i18n-safe.  This provides a new wrapper `NumberFormatter` for Java's `NumberFormat` class which is both thread-safe and i18n-safe.  Instead of using a `ThreadLocal<NumberFormat>` (which leaks memory), I use a `LoadingCache` which manages a `BlockingQueue<NumberFormat>`.  When a thread needs to format a number, I call `LoadingCache.get(locale)`, then `blockingQueue.take()` to claim an unused `NumberFormat` for the calling thread.  I then format the number and put the `NumberFormat` back on the queue.  This is a partial fix for https://github.com/facebook/buck/issues/557 .  Test Plan: Unit tests included. `ant java-test -Dtest.class=NumberFormatterTest` and `buck test //test/com/facebook/buck/i18n:i18n`.  Reviewed By: sdwilsh  fb-gh-sync-id: 3daa33a  