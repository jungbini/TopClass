  Fix integer overflow when process execution fails  Summary: When NuProcess fails to start a process, there is no error reporting available except for the exit code set to `MIN_INT`. This conflicts with the `waitFor` method, which also returns `MIN_INT` when its timeout expires, making it impossible to distinguish whether the process failed to start or timed out.  Since in most cases we specify very high time out and don't expect the time out to trigger, we can use a version of the `waitFor` method that never times out and throws an exception if the process failed to start.  This will fix an integer overflow that was happening when we ran `buck run` of `buck test` with external test runner which directly uses the return value of `waitFor` as an argument of `System.exit`. When `waitFor` returned `MIN_INT`, nailgun reported that as the exit code of the Buck process and the Python wrapper determined that it means that the process was killed by a signal and tried to resend the signal to itself, but failed because `-MIN_INT` is not a valid integer value.  Test Plan: Run `buck test` with incorrect external test runner, check that the output reports that the command failed to run and prints its arguments.  Reviewed By: andrewjcg  fbshipit-source-id: 957d259  