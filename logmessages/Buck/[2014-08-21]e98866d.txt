  SchemeGenerator: Hoist up maps for (build rule -> target) and (target -> project path)  Summary: Currently, SchemeGenerator is a stateful class only because we repeatedly call into it to build the maps of (build rule -> target) and (target -> project path).  I'm working on fixing a bug where SchemeGenerator includes too many targets in its actions (#4923085), and the easiest way to do that is by passing into it not an ActionGraph but the actual ordered list of targets and project to build, test, etc.  To do that, I'll need the maps for (build rule -> target) and (target -> project path) outside SchemeGenerator, so this hoists those up out where they're used and passes them into SchemeGenerator instead of having SchemeGenerator hold onto two ImmutableMap builders.  This also has the nice side effect of making SchemeGenerator stateless and thus thread safe.  Test Plan: ant test -Dtest.class=SchemeGeneratorTest  