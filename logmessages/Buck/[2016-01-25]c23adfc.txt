  Fix interrupt handling in ProcessExecutor  Summary: In a small number of cases the builds on our internal CI were failing with "IOException: Stream closed" after an otherwise successful build. This happened because a process that runs at the end of a build was timing out and we were interrupting the thread running it, but `ProcessExecutor` did not handle the interrupt properly. On an interrupt `ProcessExecutor` destroys the process (and closes its stdout and stderr streams), but does not stop the threads that are reading those streams. Since it looks like it is impossible to interrupt a thread blocked in `InputStream.read`, this change fixes the issue by making `InputStreamConsumer` a `Callable` and propagate the exception to the caller using futures. This way we still get the exception on an otherwise successful execution, but it does not have any effect if the thread is interrupted.  Test Plan: Run Buck multiple times (100), check that the bug doesn't reproduce.  Reviewed By: alisdair04  fb-gh-sync-id: 04e75b9  