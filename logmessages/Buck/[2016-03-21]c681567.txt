  Do not read `BUCK.autodeps` files when parsing `BUCK` files for `buck autodeps`.  Summary:This required threading a `ignoreBuckAutodepsFiles` boolean from `Parser.buildTargetGraphForTargetNodeSpecs()` down through the `ProjectBuildFileParser` constructor. From there, it is passed through to `buck.py`, which uses this flag to determine whether to parse `BUCK.autodeps` files as part of parsing a `BUCK` file.  Almost everywhere, `ignoreBuckAutodepsFiles` will be specified as `false`. The major exception is when called from `AutodepsCommand.java`.  This is important because: 1. If your `BUCK.autodeps` files get into a bad state, you can always re-run `buck autodeps` to overwrite them. (Previous to this revision, this was not true, as demonstrated by the test plan.) 2. When `buck autodeps` is run, it now sends less JSON for rules with `autodeps=True`. (We could probably reduce this even further, as `buck autodeps` cares about very few build rule arguments. `visibility` and `name` are often the only important ones for all build rules. `srcs`, `autodeps`, `provided_deps`, `exported_deps`, `generated_symbols` are the only significant ones for `java_library` rules. `binary_jar` is important for `prebuilt_jar` rules.)  Test Plan:Added a test case in `AutodepsCommandIntegrationTest`.  Verified that when I set `ignoreBuckAutodepsFiles` to `false` instead of `true` in `AutodepsCommand`, the new test case fails. This demonstrates that the new behavior introduced by this revision provides the expected fix.  Reviewed By: yiding  fb-gh-sync-id: 818430c shipit-source-id: 818430c  