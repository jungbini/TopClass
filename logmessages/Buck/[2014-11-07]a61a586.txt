  Resolve symlink tree paths in C/C++ preprocessed output and error  Summary: We setup symlink trees to isolate the headers that can be pulled in by preprocessing and to use an header namespace other than that which appears in the FS layout.  However, this also means that the preprocessing step includes uses the full paths to the symlinks in the header trees, rather than the real path to the headers, in both the preprocessed output and any error messages sent to the user.  Since symlink trees are more of a implementation detail, exposing this paths in this way is pretty ugly.  Rather than concise repo- relative paths to the real headers (e.g. foo/bar.h), the user will see a far more complex header path (e.g. buck-out/gen/foo#default/foo/bar.h). Furthermore, this causes the paths baked into the debug symbols dependent on having the full symlink trees available at the time of debugging.  This 