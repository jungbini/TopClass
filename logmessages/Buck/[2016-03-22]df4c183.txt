  Fix negative build times and improve accuracy  Summary:The Super console was displaying negative times (and non-monotonically increasing times) for the PROCESSING step for `build` and `project` commands and negative times at the beginning of the BUILDING step for `buck project` commands.  The negative parse times occur because there are multiple parse events that occur during a build cycle, and they are persisted to a single pair of `started` and `finished` variables. This means that when the following series of events occurs:  ``` 100ms: PARSE STARTED, 200ms: PARSE FINISHED, 400ms: PARSE STARTED, ... ```  The super console wil display `PROCESSING ... -0.2s` because `finished - started == -200`.  The fix is to save the events to a concurrent map, keyed by their `EventKey` and sum over matched start and finished events to get the elapsed time.  The second, related issue, comes from the `offsetMs` parameter used in logging. During a `buck build`, the build step is started before the parse steps, therefore, we subtract the parse time from the build time via the `offsetMs` param in order to display a more accurate build time. During a `buck project`, however, the build step is not kicked off until after the first round of parse steps, so the initial displayed time was negative, because the `offsetMs` was present when the build time was 0.  The fix is to only consider parse events that occur within the timespan of the build events when calculating `offsetMs`.  Test Plan:New unit tests for both Simple and Super console loggers which specifically test the scenarios outline above.  Reviewed By: marcinkosiba  fb-gh-sync-id: 84d1c0f shipit-source-id: 84d1c0f  