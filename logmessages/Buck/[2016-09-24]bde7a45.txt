  buck --help shows more useful description for --verbose  Summary: verbose now tells you which numbers to try  Test Plan: ``` $  NO_BUCKD=1 buck targets --show-rulekey //a:target --help --detect-test-changes                  : Modifies the --referenced-file and --show-target-hash flags to pretend that targets depend on their tests (experimental) --help                                 : Prints the available options and exits. --json                                 : Print JSON representation of each target --load-limit (-L) N                    : [Float] Do not start new jobs when system load is above this level. See uptime(1). --no-cache                             : Whether to ignore the [cache] declared in .buckconfig. --num-threads (-j) N                   : Default is 1.25 * num processors. --output-attributes SET<STRING>        : List of attributes to output, --output-attributes attr1 att2 ... attrN. Attributes can be regular expressions. --output-test-events-to-file           : Serialize test-related event-bus (--output-events-to-file) VAL            events to the given file as line-oriented JSON objects. --print0                               : Delimit targets using the ASCII NUL character. --profile-buck-parser                  : Enable profiling of buck.py internals (not the target being compiled) in the debuglog and trace. --referenced-file (--referenced_file)  : The referenced file list, SET<STRING>                              --referenced-file file1 file2  ... fileN --other_option --resolve-alias (--resolvealias)       : Print the fully-qualified build target for the specified alias[es] --show-cell-path (--show_cell_path)    : Print the absolute path of the cell for each rule after the rule name. --show-full-output (--show_full_output : Print the absolute path to the )                                        output, for each rule after the rule name. --show-output (--show_output)          : Print the path to the output, relative to the cell path, for each rule after the rule name. Use '--show-full-output' to obtain the full absolute path. --show-rulekey (--show_rulekey)        : Print the RuleKey of each rule after the rule name. --show-target-hash                     : Print a stable hash of each target after the target name. --target-hash-file-mode                : Modifies computation of target [PATHS_AND_CONTENTS | PATHS_ONLY]        hashes. If set to PATHS_AND_CONTENTS (the default), the contents of all files referenced from the targets will be used to compute the target hash. If set to PATHS_ONLY, only files' paths contribute to the hash. See also --target-hash-modified-paths. --target-hash-modified-paths           : Modifies computation of target SET<STRING>                              hashes. Only effective when --target-hash-file-mode is set to PATHS_ONLY. If a target or its dependencies reference a file from this set, the target's hash will be 