  Introduce a new build rule, keystore(), that is required for an android_binary().  Summary: The existing keystore_properties argument to android_binary() is a bad abstraction.  First, it requires the keystore.properties file to be in the same BUCK package as the android_binary() rule that uses it. This makes it inconvenient to reuse the same keystore in a single repository.  If the keystore referenced by the properties file changes, it will not trigger a rebuild, as it is implemented today.  By creating a keystore() build rule that must specify the file where the key is stored as well as the file that defines the other key properties, changes to either file will trigger a rebuild for an android_binary that depends on the keystore(). Further, the same keystore() can be accessed cleanly from any android_binary() in the repository.  Note that although we could eliminate the properties file altogether and require all data to be specified in the build rule definition, that would not play well with continuous integration systems that want to overwrite a debug key with a secret production key before building, as that would require such systems to parse, edit, and regenerate the build file with the keystore() rule. Under this design, the CI system only has to overwrite the keystore and keystore.properties files.  