  Fix caching of compilation database rule.  Summary: Earlier, the rule was not caching its output, so `buck build` after `buck clean` would result in the output missing.  Since the output contains absolute paths, I considered using `HasPostBuildSteps` to desanitize the output, and replace tokens with absolute paths, but turns out `HasPostBuildSteps` is currently buggy. (@andrewjcg is going to look into that).  So for now, I have disabled caching for this rule, i.e. it will always be built. I went with this option because the rule is pretty inexpensive (mostly traversing first order deps, and writing json).  Test Plan: ``` $ buck build <compilation-database-target> $ ls <output-json-file> // exists $ buck clean $ buck build <compilation-database-target> $ ls <output-json-file> // exists ```  