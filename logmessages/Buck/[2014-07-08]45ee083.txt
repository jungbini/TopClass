  [buck/ios] add new ios_postprocess_resources rule  Summary: This is necessary to finish converting an iOS application to buck. The application currently has a run script build phase which runs after resources are copied to the app bundle, and which pngcrushes all the copied PNGs. We don't apply that transformation to PNGs in master, because it would make them un-openable in Preview.app or other image viewing applications, which we don't want to break. Currently we can't support this with buck, since buck for iOS places all 'run script' build phases before the 'copy resources' build phase.  Sidenote about why we need a custom script for this: Normally projects can rely on Xcode to pngcrush these resources as they are copied to the app bundle, but Xcode doesn't touch resources inside of bundles that are copied over, which is true of many of our resources.  The two approaches we can take to fixing this are either: use a genrule as it is intended to generate pngcrushed resources when building, and have xcode copy those to the app bundle instead. this would be a fairly invasive change, and would require either:  all libraries are aware of PNG crushing and use a genrule to produce their bundle. This would also require changes to buck for iOS, since right now our genrule support isn't fully baked (genrule's of dependencies aren't considered when generating projects). ios_resource copies resources to a separate 'generated resources' folder, which is what the 'copy resources' build step actually copies to the app bundle, and ios_resource automatically applies PNG crushing to resources in the 'generated resources' folder.  the second approach, which is the one I went with here, is to add a new buck rule specifically for iOS (I named it `ios_postprocess_resources`) that provides the ability to generate a 'run script' build phase which happens after resources are copied to the app bundle. I think this is much less invasive and doesn't fundamentally change how genrule's work with buck for iOS, which was the issue with D1396857.  Test Plan: added a unit test which confirms the rule creates a run script build phase and places it after the copy resources step.  