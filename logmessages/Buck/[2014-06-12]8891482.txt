  Actually use test-selectors with --dry-run  Summary: `buck test ... --dry-run` shows two things: the targets that match your command-line options; and, where supported, the individual tests that match your command-line options.  However, this wasn't working properly with `--filter`:  This fixes buck to use the same test-selectors logic it uses when not doing a dry-run: if you are using selectors then don't show `ResultsAvailable` events where there are no actual test results.  The context here is this was causing a bug in testpilot.  When test-pilot does a dry-run, with the `--buck-args` you told it to run buck with, it was listing more tests than expected (in this example, `com.example.TestA#test2`, `com.example.TestB#test2`, and `com.example.TestC#test2`):  $ t --buck-args \\--filter \#testFoo buck-cli: exec: 'buck' 'test' ... '--all' '--dry-run' '--filter' '#test2'  Fixing dry-run to work with test-selectors / filtering should unbreak this test-pilot bug.  Test Plan: ``` lang=none, name=Before & buck test test/com/facebook/buck/graph/ --dry-run --filter Dot ... DRYRUN <100ms  5 Passed   0 Skipped   0 Failed   com.facebook.buck.graph.AbstractAcyclicDepthFirstPostOrderTraversalTest DRYRUN <100ms  2 Passed   0 Skipped   0 Failed   com.facebook.buck.graph.AbstractBottomUpTraversalTest DRYRUN <100ms  1 Passed   0 Skipped   0 Failed   com.facebook.buck.graph.DotTest DRYRUN <100ms  1 Passed   0 Skipped   0 Failed   com.facebook.buck.graph.HashMultimapTest DRYRUN <100ms  7 Passed   0 Skipped   0 Failed   com.facebook.buck.graph.MutableDirectedGraphTest ```  ``` lang=none, name=After & buck test test/com/facebook/buck/graph/ --dry-run --filter Dot ... DRYRUN <100ms  1 Passed   0 Skipped   0 Failed   com.facebook.buck.graph.DotTest ```  