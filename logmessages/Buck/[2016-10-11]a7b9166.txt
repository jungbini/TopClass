  pch: reuse PCH rules if same header file + flag combination  Summary: Previously a PCH was rebuilt for every rule in which the `prefix_header` option was used.  While the resulting compilations were not incorrect, this resulted in much more PCH building than necessary.  This was due to the cache logic for the PCH.  The logic is, compute the hash of target, header, headerlanguage, and compile flags.  This is still the case; however the target part is changed here.  Instead of the target being the one who said `prefix_header`, change it so that if the SourcePath reference in prefix_header parameter is a rule, use the rule's target.  Example which should help un-muddle my poor explanation. :)  Sample BUCK:  export_file(name='pch', src='header.h') cxx_binary(name='bin1', src='bin1.c', prefix_header=':pch') cxx_binary(name='bin2', src='bin2.c', prefix_header=':pch')  The header `header.h` would be precompiled twice, once for each binary rule.  That's because the hashes were computed in the two 