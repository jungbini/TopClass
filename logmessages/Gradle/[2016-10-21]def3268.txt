  Handle backward clock-shift in dependency cache checks  Many of our tests use `cacheChangingModulesFor '0', 'seconds'` to test the cache infrastructure. They make a change to a dependency and then expect that Gradle will detect that change. However, if a clock- shift resulted in a negative wall-clock age for a cache entry, we were using the cached entry (even though we were using '0 seconds' as our timeout.  After this change, when cache expiry is set to 0 we will only trust entries with exactly 0 age (not negative). These entries are known to be loaded in the current build, since all comparison is made using the wall-clock time at build start.  It is hoped that this will fix a bunch of flaky tests where we see invalid cache hits due to wall-clock shifts.  gradle/gradle-private#344  