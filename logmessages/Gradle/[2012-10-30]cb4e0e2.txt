  TestNG reports are now lovely (not by default, though)  1. By default the TestNG works as it was before, e.g. all 3 old reports are generated into usal spots. Those reports are generated by *TestNG*. Those reports do not contain test output and fail when forkEvery or maxParallelForks is used. 2. Only if the user configures the test.testReport = true in his buildscript the new reports are generated. If testReport is on, the old TestNG reports are *not* generated. It is somewhat a breaking change so it needs proper documentation and announcement. The new reports are generated by *Gradle* which means they are beautiful, they contain test output and work smoothly with forkEvery / maxParallelForks. The new reports consists of: new xml results (with test outputs, CI servers will be happy), new html reports (pretty, easy to read and navigate). 3. If (unlikely) some user really wants to generate both reports (old and new) it is possible, he needs to configure the default listeners via TestNGOptions.listeners 4. Setting TestNGOptions.useDefultListeners = true has no effect if the testReport is on. A mildly breaking change. 5. It is possible to prevent generation of both old and new reports via TestNGOptions.useDefultListeners = false and test.testReport = false  The new reports are not yet turned on by default because they consume tons of heap space. It's because with TestNG we don't receive events for start/end test class and hence we need to wait until the suite end to generate the xml results. This problem can be fixed, for example by making the serialization smarter. However, it's not yet implemented.  The proposed breaking changes are mild IMHO. The default behavior stays untouched. Also, the migration plan to use the new reports by default should be fairly straightforward. The changes are more-less what we've discussed earlier with Adam; also discussed with PeterN today. Please review and thanks for reading :)  