  Fix execution order for finalizer tasks  As part of the fix for GRADLE-3575 we changed the task ordering algorithm to aggressively push finalizers later in execution. This was done to ensure that finalizers didn't execute before tasks that they should finalize.  This change broke existing builds that depended on the finalizer being executed as soon as possible after the finalized task. This type of ordering isn't guaranteed, and builds should declare task dependencies to ensure correct execution order, particularly when executed with parallel task execution. (A similar situation exists with alphabetical task ordering: we won't change this arbitrarily, but the ordering won't necessarily be honoured in the case of parallel task execution).  In order to avoid breaking builds unnecessarily, this fix reinstates the previous finalizer ordering, while still providing a fix for GRADLE_3575.  Issue: #783  