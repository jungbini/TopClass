  First cut of parallel execution spike - TaskExecutionPlan is responsible for constructing the DAG, managing the execution schedule and blocking until dependencies have been executed. It is thread-aware but should function in the single threaded case. - TaskExecutor is responsible for actually executing the tasks: currently have default, single-threaded implementation and parallel multithreaded implementation. These implementations can only be switched at compile-time. - Use a simple (braindead) worker pool for executing tasks in parallel. Projects are allocated to a particular thread on start. - TaskInfo is a lot more sophisticated for keeping track of execution state - Hacked in a fix for DefaultCacheAccess so that it works with multiple threads. Previously it only worked with multiple processes. This implementation needs review.  