  Fix fenced code block formatting in jdk9 design doc  This change fixes rendering errors due to misplaced or mis-intended fenced code blocks within the body of bullet-points.  GitHub Flavored Markdown (GFM) [1] is silent with regard to how fenced code blocks should be formatted in this specific situation, but after some experimentation, it appears there are in fact clear rules.  Fenced code blocks within the body of a bullet point:  - may be place immediately after the bullet point or may have an empty line in between;  - must be intented one level (four spaces) deeper than the first character of the enclosing bullet point;  - must be followed by an empty line, after which a new bullet point can follow, or additional text specific to the current bullet point can follow. In the latter case, the text following the fenced code block will remain properly indented.  If the rules above are violated, the fenced code block will render badly or not at all.  Example:  - First bullet with no code block and no indented text  - Second bullet with code block  ``` public class Foo { } ```  - Third bullet with code block and indented text  Properly-indented text before  ``` public class Bar { } ```  Properly-indented text after  - Fourth block with no code block and indented text  Properly indented body  [1]: https://help.github.com/articles/github-flavored-markdown/#fenced-code-blocks  